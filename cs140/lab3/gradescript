#!/bin/sh 

dir=/home/plank/cs140/Labs/Lab3
ge="$dir/Gradescript-Examples"

if [ $# -ne 1 ]; then
  echo 'usage: gradescript problem_number (1-100)' >&2
  exit 1
fi

if [ "$1" -gt 0 -a "$1" -le 100 ]; then
  enum=`echo $1 | awk '{ printf "%03d\n", $1 }'`
else
  echo 'usage: gradescript problem_number (1-100)' >&2
  exit 1
fi
  
program=pgm_editor
  
if [ ! -f $program ]; then
  echo "Problem $enum is incorrect."
  echo ""
  echo "Your program $program does not exist."
  exit 0
fi

if [ ! -f $program.cpp ]; then
  echo "Problem $enum is incorrect."
  echo ""
  echo "Your program $program.cpp does not exist."
  exit 0
fi

sed -n '/DO NOT CHANGE ANYTHING BELOW THIS LINE/,$p' $dir/$program.cpp > tmp-my-end.txt
sed -n '/DO NOT CHANGE ANYTHING BELOW THIS LINE/,$p' $program.cpp > tmp-your-end.txt

end=`diff tmp-my-end.txt tmp-your-end.txt | wc | awk '{ print $1 }'`

if [ $end -ne 0 ]; then
  echo "Problem $enum is incorrect."
  echo ""
  echo "You changed the part of the program that you shouldn't have changed."
  echo ""
  echo "see tmp-my-end.txt and tmp-your-end.txt, and fix your changes."
  exit 0
fi
  
rm -f tmp-my-end.txt tmp-your-end.txt

rm -f tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt tmp-$enum-correct-stdout.txt tmp-$enum-correct-stderr.txt

if [ -f $ge/$enum.pgm ]; then
  $dir/$program `cat $ge/$enum.txt` < $ge/$enum.pgm > tmp-$enum-correct-stdout.txt 2> tmp-$enum-correct-stderr.txt
  ./$program `cat $ge/$enum.txt` < $ge/$enum.pgm > tmp-$enum-test-stdout.txt 2> tmp-$enum-test-stderr.txt
  call="./$program "`cat $ge/$enum.txt`" < $ge/$enum.pgm"
else
  $dir/$program `cat $ge/$enum.txt` > tmp-$enum-correct-stdout.txt 2> tmp-$enum-correct-stderr.txt
  ./$program `cat $ge/$enum.txt` > tmp-$enum-test-stdout.txt 2> tmp-$enum-test-stderr.txt
  call="./$program "`cat $ge/$enum.txt`
fi

out=`diff tmp-$enum-correct-stdout.txt tmp-$enum-test-stdout.txt | wc | awk '{ print $1 }'`
err=`diff tmp-$enum-correct-stderr.txt tmp-$enum-test-stderr.txt | wc | awk '{ print $1 }'`

if [ $out != 0 -o $err != 0 ]; then
  echo "Problem $enum is incorrect."
  echo ""
  if [ $out != 0 ]; then
    echo "Your standard output does not match the correct one."
  fi
  if [ $err != 0 ]; then
    echo "Your standard error does not match the correct one."
  fi
  echo ""
  echo "TEST:"
  echo ""
  echo "$call"
  echo ""
  echo "FILES:"
  echo ""
  echo "Your standard output is in tmp-$enum-test-stdout.txt."
  echo "Your standard error  is in tmp-$enum-test-stderr.txt."
  echo ""
  echo "The correct standard output is in tmp-$enum-correct-stdout.txt."
  echo "The correct standard error  is in tmp-$enum-correct-stderr.txt."
  echo ""
  echo "Look at correct files and your files, perhaps run 'diff -y' on them, and figure out your mistake."
  echo "Please remember to delete this files when you are finished."
else 
  echo "Problem $enum is correct."
  echo ""
  echo "Test: $call" 
  rm -f tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt tmp-$enum-correct-stdout.txt tmp-$enum-correct-stderr.txt
fi
